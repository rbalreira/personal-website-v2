@use "variables" as v;

/// Responsive breakpoint manager
/// @access public
/// @param {string} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get(v.$breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == "string",
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }
}

/// Align items at the center
/// @access public
@mixin justify-content-center() {
  display: flex;
  justify-content: center;
}

/// Transition ease-in-out timing-function
/// @access public
/// @param {seconds} $duration - Duration
@mixin transition-ease-in-out($duration: 0.3s) {
  transition: $duration ease-in-out;
}

/// Translate Y axis for specific element
/// @access public
/// @param {size} $value - Value
@mixin transform-translateY($value: -10px) {
  transform: translateY($value);
}
